p_len = 0x1000
oc0_len = 0x900
f0_len = 0x1000
oc1_len = 0x1000
a_len = 0x1000 
b_len = 0x100

oc0_off = p_len
f0_off = p_len + oc0_len
oc1_off = p_len + oc0_len + f0_len
a_off = p_len + oc0_len + f0_len + oc1_len

# --

g0_len = 0xff0
c0_len = 0x910
g1_len = 0xff0
c1_len = 0x900
#0x31f0
g2_len = 0x1000
g3_len = 0x810

c0_off = g0_len
g1_off = g0_len + c0_len
c1_off = g0_len + c0_len + g1_len

assert(g0_len + c0_len + g1_len + c1_len + g2_len + g3_len == 0x4a00)
assert(p_len + oc0_len + f0_len + oc1_len + a_len + b_len == 0x4a00)
    
assert(c0_off + 0x20 == oc0_off + 0x10) # c0 correct overlap

#print(hex(c1_off + 0x20 - 0x10 - f0_off))
assert(c1_off + 0x20 == oc1_off + 0x10) # c1 correct overlap

# --
p_len = 0xff0
oc0_len = 0x900
f0_len = 0x1000
oc1_len = 0x1000
f1_len = 0x800
a_len = 0x810 
b_len = 0x100

oc0_off = p_len
f0_off = p_len + oc0_len
oc1_off = p_len + oc0_len + f0_len

# --
g02_len = 0xff0
c02_len = 0x150
d02_len = 0x7c0
g12_len = 0xff0
c12_len = 0x150

c02_off = g02_len
d02_off = g02_len + c02_len
g12_off = g02_len + c02_len + d02_len
c12_off = g02_len + c02_len + d02_len + g12_len

assert(c02_off == oc0_off)
assert(c12_off == oc1_off)