exploit_0:	compile: gcc -o app src.c -no-pie -fno-stack-protector
	 	leak libc version and base address with ASLR ON, start shell remote
	 	exploited source code taken from https://gist.github.com/ShivamShrirao/7c5e2a5183a232800e73490056177b6b#file-got_leak_target-c
	 	
exploit_1:	compile: gcc -o app src.c
		exploit with ASLR, PIE, canary, and RELRO all activated
		exploited source code taken from https://gist.github.com/ShivamShrirao/5373659efb11082b0b43eba594c47017#file-msg_server-c
		
exploit_2:	compile: gcc -o app src.c
		exploited source code taken from https://gist.github.com/ShivamShrirao/8019426212586ef704a38af8d024ff76#file-format-c
	
exploit_h0:  	0ctfbabyheap (0ctf quals 2017) exploited on glibc 2.31

exploit_h1:	wheel of robots (insomnnihack 2017) exploited on glibc 2.31

exploit_h2: 	oreo (hack.lu 2014) exploited on glibc 2.31

exploit_h3:	plainnote (balsn 2019) exploited on glibc 2.31

exploit_h4:	heapstorm2 (0ctf 2018): exploit almost done on 2.26 (without using TCACHE)

exploit_h5:	one_punch (hitcon 2019): exploited on glibc 2.31

exploit_fsop0: lazynote (seccon 2020): cannot exploit in glibc 2.31

exploit_controller,
exploit_minefield,
exploit_sysdrop,
... 			: https://thalium.github.io/blog/posts/apocalypse2021-pwn/

